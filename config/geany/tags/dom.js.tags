# format=pipe
## DOM Objects constructor
HTMLAnchorElement||()|implemented by: <a>
HTMLAppletElement||()|implemented by: <applet>
HTMLAudioElement||()|implemented by: <audio>
HTMLAreaElement||()|implemented by: <area>
HTMLBaseElement||()|implemented by: <base>
HTMLBaseFontElement||()|implemented by: <basefont>
HTMLBodyElement||()|implemented by: <body>
HTMLBRElement||()|implemented by: <br>
HTMLButtonElement||()|implemented by: <button>
HTMLCanvasElement||()|implemented by: <canvas>
HTMLDirectoryElement||()|implemented by: <dir>
HTMLDivElement||()|implemented by: <div>
HTMLDListElement||()|implemented by: <dl>
HTMLEmbedElement||()|implemented by: <embed>
HTMLFieldSetElement||()|implemented by: <fieldset>
HTMLFontElement||()|implemented by: <font>
HTMLFormElement||()|implemented by: <form>
HTMLFrameElement||()|implemented by: <frame>
HTMLFrameSetElement||()|implemented by: <frameset>
HTMLHeadElement||()|implemented by: <head>
HTMLHeadingElement||()|implemented by: <h1>,<h2>,<h3>,<h4>,<h5>,<h6>
HTMLHtmlElement||()|implemented by: <html>
HTMLHRElement||()|implemented by: <hr>
HTMLIFrameElement||()|implemented by: <iframe>
HTMLImageElement||()|implemented by: <img>
HTMLInputElement||()|implemented by: <input>
HTMLKeygenElement||()|implemented by: <keygen>
HTMLLabelElement||()|implemented by: <label>
HTMLLIElement||()|implemented by: <li>
HTMLLinkElement||()|implemented by: <link>
HTMLMapElement||()|implemented by: <map>
HTMLMenuElement||()|implemented by: <menu>
HTMLMetaElement||()|implemented by: <meta>
HTMLModElement||()|implemented by: <del>,<ins>
HTMLObjectElement||()|implemented by: <object>
HTMLOListElement||()|implemented by: <ol>
HTMLOptGroupElement||()|implemented by: <optgroup>
HTMLOptionElement||()|implemented by: <option>
HTMLOutputElement||()|implemented by: <output>
HTMLParagraphElement||()|implemented by: <p>
HTMLParamElement||()|implemented by: <param>
HTMLPreElement||()|implemented by: <pre>,<plaintext>
HTMLQuoteElement||()|implemented by: <q>,<blockquote>
HTMLScriptElement||()|implemented by: <script>
HTMLSelectElement||()|implemented by: <select>
HTMLSourceElement||()|implemented by: <source>
HTMLSpanElement||()|implemented by: <span>
HTMLStyleElement||()|implemented by: <style>
HTMLTableElement||()|implemented by: <table>
HTMLTableCaptionElement||()|implemented by: <caption>
HTMLTableCellElement||()|
HTMLTableDataCellElement||()|implemented by: <td>
HTMLTableHeaderCellElement||()|implemented by: <th>
HTMLTableColElement||()|implemented by: <col>,<colgroup>
HTMLTableRowElement||()|implemented by: <tr>
HTMLTableSectionElement||()|implemented by: <tfoot>,<thead>,<tbody>
HTMLTextAreaElement||()|implemented by: <textarea>
HTMLTimeElement||()|implemented by: <time>
HTMLTitleElement||()|implemented by: <title>
HTMLTrackElement||()|implemented by: <track>
HTMLUListElement||()|implemented by: <ul>
HTMLUnknownElement||()|implemented by: <bgsound>,<isindex>,<bq>,<nextid>,<multicol>,<spacer>,<noframes>
HTMLCanvasElement||()|implemented by the <canvas> element.
HTMLAudioElement||()|implemented by the HTML5 <audio>  element.
HTMLVideoElement||()|implemented by the HTML5 <video>  element.
##window properties
applicationCache|window.||An nsIDOMOfflineResourceList object providing access to the offline resources for the window.
closed|window.||This property indicates whether the current window is closed or not.
Components|window.||The entry point to many XPCOM features. Some properties, e.g. classes, are only available to sufficiently privileged code.
content|window.||Returns a reference to the content element in the current window. The variant with underscore is deprecated.
controllers|window.||Returns the XUL controller objects for the current chrome window.
crypto|window.||Returns the browser crypto object.
defaultStatus|window.||Gets/sets the status bar text for the given window.
dialogArguments|window.||Gets the arguments passed to the window (if it's a dialog box) at the time window.showModalDialog() was called. This is an nsIArray .
directories Obsolete|window.||Synonym of window.personalbar
document|window.||Returns a reference to the document that the window contains.
frameElement|window.||Returns the element in which the window is embedded, or null if the window is not embedded.
frames|window.||Returns an array of the subframes in the current window.
fullScreen|window.||This property indicates whether the window is displayed in full screen or not.
history|window.||Returns a reference to the history object.
innerHeight|window.||Gets the height of the content area of the browser window including, if rendered, the horizontal scrollbar.
innerWidth|window.||Gets the width of the content area of the browser window including, if rendered, the vertical scrollbar.
length|window.||Returns the number of frames in the window. See also window.frames .
location|window.||Gets/sets the location, or current URL, of the window object.
locationbar|window.||Returns the locationbar object, whose visibility can be toggled in the window.
localStorage|window.||Returns a reference to the local storage object used to store data that may only be accessed by the origin that created it.
menubar|window.||Returns the menubar object, whose visibility can be toggled in the window.
messageManager|window.||Returns the message manager object for this window.
mozAnimationStartTime|window.||The time in milliseconds since epoch at which the current animation cycle began.
mozInnerScreenX|window.||Returns the horizontal (X) coordinate of the top-left corner of the window's viewport, in screen coordinates. This value is reported in CSS pixels. See mozScreenPixelsPerCSSPixel in nsIDOMWindowUtils for a conversion factor to adapt to screen pixels if needed.
mozInnerScreenY|window.||Returns the vertical (Y) coordinate of the top-left corner of the window's viewport, in screen coordinates. This value is reported in CSS pixels. See mozScreenPixelsPerCSSPixel for a conversion factor to adapt to screen pixels if needed.
mozPaintCount|window.||Returns the number of times the current document has been rendered to the screen in this window. This can be used to compute rendering performance.
name|window.||Gets/sets the name of the window.
navigator|window.||Returns a reference to the navigator object.
opener|window.||Returns a reference to the window that opened this current window.
outerHeight|window.||Gets the height of the outside of the browser window.
outerWidth|window.||Gets the width of the outside of the browser window.
pageXOffset|window.||An alias for window.scrollX .
pageYOffset|window.||An alias for window.scrollY
parent|window.||Returns a reference to the parent of the current window or subframe.
performance|window.||Provides a hosting area for performance related attributes.
personalbar|window.||Returns the personalbar object, whose visibility can be toggled in the window.
pkcs11 Obsolete|window.||Formerly provided access to install and remove PKCS11 modules. Now this property is always null.
returnValue|window.||The return value to be returned to the function that called window.showModalDialog() to display the window as a modal dialog.
screen|window.||Returns a reference to the screen object associated with the window.
screen.availTop|window.||Specifies the y-coordinate of the first pixel that is not allocated to permanent or semipermanent user interface features.
screen.availLeft|window.||Returns the first available pixel available from the left side of the screen.
screen.availHeight|window.||Specifies the height of the screen, in pixels, minus permanent or semipermanent user interface features displayed by the operating system, such as the Taskbar on Windows.
screen.availWidth|window.||Returns the amount of horizontal space in pixels available to the window.
screen.colorDepth|window.||Returns the color depth of the screen.
screen.height|window.||Returns the height of the screen in pixels.
screen.left|window.||Returns the current distance in pixels from the left side of the screen.
screen.pixelDepth|window.||Gets the bit depth of the screen.
screen.top|window.||Returns the distance from the top of the screen.
screen.width|window.||Returns the width of the screen.
screenX|window.||Returns the horizontal distance of the left border of the user's browser from the left side of the screen.
screenY|window.||Returns the vertical distance of the top border of the user's browser from the top side of the screen.
scrollbars|window.||Returns the scrollbars object, whose visibility can be toggled in the window.
scrollMaxX|window.||The maximum offset that the window can be scrolled to horizontally. (i.e., the document width minus the viewport width)
scrollMaxY|window.||The maximum offset that the window can be scrolled to vertically (i.e., the document height minus the viewport height).
scrollX|window.||Returns the number of pixels that the document has already been scrolled horizontally.
scrollY|window.||Returns the number of pixels that the document has already been scrolled vertically.
self|window.||Returns an object reference to the window object itself.
sessionStorage New in Firefox 2.0|window.||A storage object for storing data within a single page session.
sidebar|window.||Returns a reference to the window object of the sidebar.
status|window.||Gets/sets the text in the statusbar at the bottom of the browser.
statusbar|window.||Returns the statusbar object, whose visibility can be toggled in the window.
toolbar|window.||Returns the toolbar object, whose visibility can be toggled in the window.
top|window.||Returns a reference to the topmost window in the window hierarchy. This property is read only.
URL|window.||A DOM URL object, which provides the window.URL.createObjectURL() and window.URL.revokeObjectURL() methods.
window|window.||Returns a reference to the current window.
## window methods
getSelection|(browser Gecko) window.|(): Selection|
open|window.|(strUrl,strWindowName,strWindowFeatures,bReplace): window|
print|window.|(): void|
alert|window.|(sMesssage): void|
atob|(browser Gecko) window.|(encodedData): void|
btoa|(browser Gecko) window.|(decodedData): void|
confirm|(browser Gecko) window.|(sMesssage): void|
prompt|window.|(sMessage,sDefaultValue): void|
clearInterval|window.|(intervalId): void|
clearTimeout|window.|(intervalId): void|
setInterval|window.|(vCode,iMillis): number|
setTimeout|window.|(vCode,iMillis): number|
ScriptEngine|(browser IE) window.|(): string|
ScriptEngineBuildVersion|(browser IE) window.|(): string|
ScriptEngineMajorVersion|(browser IE) window.|(): string|
ScriptEngineMinorVersion|(browser IE) window.|(): string|
scrollTo|window.|(x,y): void|
scrollBy|window.|(xDelta,yDelta): void|
moveTo|window.|(x,y): void|
moveBy|window.|(xDelta,yDelta): void|
resizeTo|window.|(width,height): void|
resizeBy|window.|(widthDelta,heightDelta): void|
getComputedStyle|(browser Gecko) window.|(element,pseudoElt): CSSStyleDeclaration|
showModalDialog|(browser IE) window.|(sUrl,vArguments,sFeatures): Object|
attachEvent|(browser IE) window.|(type,listener): void|
detachEvent|(browser IE) window.|(type,listener): void|
addEventListener|(browser Gecko) window.|(type,listener,useCapture): void|
removeEventListener|(browser Gecko) window.|(type,listener,useCapture): void|
execScript|(browser IE))window.|(sScript)|
CollectGarbage|(browser IE) window.|()|
## Document properties
activeElement|Document.||
alinkColor|Document.||
all|Document.||
anchors|Document.||
applets|Document.||
async|Document.||
baseURIObject|Document.||
bgColor|Document.||
body|Document.||
characterSet|Document.||
compatMode|Document.||
contentType|Document.||
cookie|Document.||
currentScript|Document.||
defaultView|Document.||
designMode|Document.||
dir|Document.||
doctype|Document.||
documentElement|Document.||
documentURI|Document.||
documentURIObject|Document.||
domain|Document.||
embeds|Document.||
fgColor|Document.||
fileSize|Document.||
forms|Document.||
head|Document.||
height|Document.||
images|Document.||
implementation|Document.||
inputEncoding|Document.||
lastModified|Document.||
lastStyleSheetSet|Document.||
linkColor|Document.||
links|Document.||
location|Document.||
mozFullScreen|Document.||
mozFullScreenElement|Document.||
mozFullScreenEnabled|Document.||
mozSyntheticDocument|Document.||
plugins|Document.||
popupNode|Document.||
preferredStyleSheetSet|Document.||
readyState|Document.||
referrer|Document.||
scripts|Document.||
selectedStyleSheetSet|Document.||
styleSheets|Document.||
styleSheetSets|Document.||
title|Document.||
tooltipNode|Document.||
URL|Document.||
## Document functions
adoptNode|Document.|()|
captureEvents|Document.|()|
close|Document.|()|
createAttribute|Document.|()|
createAttributeNS|Document.|()|
createCDATASection|Document.|()|
createComment|Document.|()|
createDocumentFragment|Document.|()|
createElement|Document.|()|
createElementNS|Document.|()|
createEntityReference|Document.|()|
createEvent|Document.|()|
createExpression|Document.|()|
createNSResolver|Document.|()|
createProcessingInstruction|Document.|()|
createRange|Document.|()|
createTextNode|Document.|()|
createTreeWalker|Document.|()|
elementFromPoint|Document.|()|
enableStyleSheetsForSet|Document.|()|
evaluate|Document.|()|
execCommand|Document.|()|
execCommandShowHelp|Document.|()|
getElementById|Document.|()|
getElementsByClassName|Document.|()|
getElementsByName|Document.|()|
getElementsByTagName|Document.|()|
getElementsByTagNameNS|Document.|()|
getSelection|Document.|()|
hasFocus|Document.|()|
importNode|Document.|()|
load|Document.|()|
loadOverlay|Document.|()|
normalizeDocument|Document.|()|
open|Document.|()|
queryCommandEnabled|Document.|()|
queryCommandIndeterm|Document.|()|
queryCommandState|Document.|()|
queryCommandSupported|Document.|()|
queryCommandValue|Document.|()|
querySelector|Document.|()|
querySelectorAll|Document.|()|
releaseCapture|Document.|()|
releaseEvents|Document.|()|
removeEventListener|Document.|()|
routeEvent|Document.|()|
write|Document.|()|
writeln|Document.|()|
## Dom Node properties/functions
attributes|Node.||
baseURI|Node.||
child|Node.||
firstChild|Node.||
lastChild|Node.||
localName|Node.||
namespaceURI|Node.||
nextSibling|Node.||
name|Node.||
principal|Node.||
type|Node.||
value|Node.||
ownerDocument|Node.||
parent|Node.||
prefix|Node.||
previousSibling|Node.||
textContent|Node.||
appendChild|Node.|( )|
clone|Node.|( )|
compareDocumentPosition|Node.|( )|
contains|Node.|( )|
getUserData|Node.|( )|
hasAttributes|Node.|( )|
hasChild|Node.|( )|
insertBefore|Node.|( )|
isDefaultNamespace|Node.|( )|
isEqual|Node.|( )|
isSupported|Node.|( )|
lookupPrefix|Node.|( )|
lookupNamespaceURI|Node.|( )|
normalize|Node.|( )|
removeChild|Node.|( )|
replaceChild|Node.|( )|
setUserData|Node.|( )|
## DOM Element properties
attributes|Element.||All attributes associated with an element.	NamedNodeMap	All
baseURI|Element.||Base URI as a string	String	HTML, XUL
baseURIObject|Element.||New in Firefox 3	The read-only nsIURI object representing the base URI for the element.	nsIURI	All (with UniversalXPConnect privileges)
childElementCount|Element.||New in Firefox 3.5	The number of child nodes that are elements.	Number	HTML, XUL
childNodes|Element.||All child nodes of an element. A live nsIDOMNodeList of the current child elements.	NodeList	All
children|Element.||Requires Gecko 1.9	All child nodes of an element as a collection.	HTMLCollection	HTML, XUL
classList|Element.||Requires Gecko 1.9.2	Token list of class attribute	DOMTokenList	HTML
className|Element.||Gets/sets the class of the element.	String	HTML, XUL
clientHeight|Element.||The inner height of an element.	Number	HTML
clientLeft|Element.||The width of the left border of an element.	Number	HTML
clientTop|Element.||The width of the top border of an element.	Number	HTML
clientWidth|Element.||The inner width of an element.	Number	HTML
contentEditable|Element.||Requires Gecko 1.9	Gets/sets whether or not the element is editable.	String	HTML, XUL
dataset|Element.||Allows access to read and write custom data attributes on the element.	DOMStringMap	HTML
dir|Element.||Gets/sets the directionality of the element.	String	HTML, XUL
firstChild|Element.||The first direct child node of an element, or null if this element has no child nodes.	Node	All
firstElementChild|Element.||Requires Gecko 1.9	The first direct child element of an element, or null if the element has no child elements.	Element	HTML, XUL
id|Element.||Gets/sets the id of the element.	String	HTML, XUL
innerHTML|Element.||Gets/sets the markup of the element's content.	String	HTML
isContentEditable|Element.||Requires Gecko 2	Indicates whether or not the content of the element can be edited. Read only.	Boolean	HTML, XUL
lang|Element.||Gets/sets the language of an element's attributes, text, and element contents.	String	HTML
lastChild|Element.||The last direct child node of an element, or null if this element has no child nodes.	Node	All
lastElementChild|Element.||Requires Gecko 1.9	The last direct child element of an element, or null if the element has no child elements.	Element	HTML, XUL
localName|Element.||The local part of the qualified name of an element. In Firefox 3.5 and earlier, the property upper-cases the local name for HTML elements (but not XHTML elements). In later versions, this does not happen, so the property is in lower case for both HTML and XHTML. Requires Gecko 1.9.2	String	All
name|Element.||Gets/sets the name attribute of an element.	String	HTML
namespaceURI|Element.||The namespace URI of this node, or null if it is no namespace. In Firefox 3.5 and earlier, HTML elements are in no namespace. In later versions, HTML elements are in the www.w3.org/1999/xhtml namespace in both HTML and XML trees. Requires Gecko 1.9.2	String	All
nextSibling|Element.||The node immediately following the given one in the tree, or null if there is no sibling node.	Node	All
nextElementSibling|Element.||New in Firefox 3.5	The element immediately following the given one in the tree, or null if there's no sibling node.	Element	HTML, XUL
nodeName|Element.||The name of the node.	String	All
nodePrincipal|Element.||New in Firefox 3	The node's principal.	nsIPrincipal	All (with UniversalXPConnect privileges)
nodeType|Element.||A number representing the type of the node. Is always equal to 1 for DOM elements.	Number	All
nodeValue|Element.||The value of the node. Is always equal to null for DOM elements.	String	All
offsetHeight|Element.||The height of an element, relative to the layout.	Number	HTML
offsetLeft|Element.||The distance from this element's left border to its offsetParent's left border.	Number	HTML
offsetParent|Element.||The element from which all offset calculations are currently computed.	Element	HTML
offsetTop|Element.||The distance from this element's top border to its offsetParent's top border.	Number	HTML
offsetWidth|Element.||The width of an element, relative to the layout.	Number	HTML
outerHTML|Element.||Requires Gecko 11	Gets the markup of the element including its content. When used as a setter, replaces the element with nodes parsed from the given string.	String	HTML
ownerDocument|Element.||The document that this node is in, or null if the node is not inside of one.	Document	All
parentNode|Element.||The parent element of this node, or null if the node is not inside of a DOM Document .	Node	All
prefix|Element.||The namespace prefix of the node, or null if no prefix is specified.	String	All
previousSibling|Element.||The node immediately preceding the given one in the tree, or null if there is no sibling node.	Node	All
previousElementSibling|Element.||New in Firefox 3.5	The element immediately preceding the given one in the tree, or null if there is no sibling element.	Element	HTML, XUL
schemaTypeInfo|Element.||Returns TypeInfo regarding schema information for the element (also available on Attr ).	TypeInfo	Not supported
scrollHeight|Element.||The scroll view height of an element.	Number	HTML
scrollLeft|Element.||Gets/sets the left scroll offset of an element.	Number	HTML
scrollTop|Element.||Gets/sets the top scroll offset of an element.	Number	HTML
scrollWidth|Element.||The scroll view width of an element.	Number	HTML
spellcheck|Element.||Controls spell-checking (present on all HTML elements)	Boolean	HTML
style|Element.||An object representing the declarations of an element's style attributes.	CSSStyleDeclaration	HTML, XUL
tabIndex|Element.||Gets/sets the position of the element in the tabbing order.	Number	HTML
tagName|Element.||The name of the tag for the given element.	String	All
textContent|Element.||Gets/sets the textual contents of an element and all its descendants.	String	All
title|Element.||A string that appears in a popup box when mouse is over the element.	String	HTML
## DOM Element Functions
addEventListener|Element.|( type, listener, useCapture )|
appendChild|Element.|( appendedNode ): Node|
blur|Element.|()|
click|Element.|()|
cloneNode|Element.|( deep ): Node|
compareDocumentPosition|Element.|( otherNode ): number|
dispatchEvent|Element.|( event ): Boolean|
focus|Element.|()|
getAttribute|Element.|( name ): Object|
getAttributeNS|Element.|( namespace, name ): Object|
getAttributeNode|Element.|( name ): Attr|
getAttributeNodeNS|Element.|( namespace, name ): Attr|
getBoundingClientRect|Element.|( )|
getClientRects|Element.|( )|
getElementsByClassName|Element.|( ): NodeList|
getElementsByTagName|Element.|( name ): NodeList|
getElementsByTagNameNS|Element.|( namespace, name ): NodeList|
getFeature|Element.|( feature, version ): Object|
getUserData|Element.|( key ): DOMUserData|
hasAttribute|Element.|( name ): Boolean|
hasAttributeNS|Element.|( namespace, name ): Boolean|
hasAttributes|Element.|(): Boolean|
hasChildNodes|Element.|(): Boolean|
insertBefore|Element.|( insertedNode , adjacentNode ): Node|
isDefaultNamespace|Element.|( namespaceURI ): Boolean|
isEqualNode|Element.|( nodeArg ): Boolean|		All
isSameNode|Element.|( otherNode ): Boolean| 		All
isSupported|Element.|( feature, version ): Boolean|		All
lookupNamespaceURI|Element.|( prefix ): string|		All
mozMatchesSelector|Element.|( selector ): Boolean| Non-standard 
mozRequestFullScreen|Element.|( )| Non-standard 
normalize|Element.|()|
querySelector|Element.|( selectors[, nsresolver] ): Node|
querySelectorAll|Element.|( selectors[, nsresolver] ): NodeList|
removeAttribute|Element.|( name )|
removeAttributeNS|Element.|( namespace, name )|
removeAttributeNode|Element.|( attrNode )|
removeChild|Element.|( removedNode ): Node|
removeEventListener|Element.|( type, handler, useCapture )|
replaceChild|Element.|( insertedNode , replacedNode ): Node|
scrollIntoView|Element.|( alignWithTop )|
setAttribute|Element.|( name, value )|
setAttributeNS|Element.|( namespace, name, value )|
setAttributeNode|Element.|( name, attrNode )|
setAttributeNodeNS|Element.|( namespace, name, attrNode )|
setCapture|Element.|( retargetToElement )|
setIdAttribute|Element.|(name, isIdBoolean)|
setIdAttributeNS|Element.|( namespaceURI, localName, isIdBoolean )|
setIdAttributeNode|Element.|( idAttr, isIdBoolean )|
setUserData|Element.|( key, data , handler ): DOMUserData|
insertAdjacentHTML|Element.|( position , text )|
## Location object
hash|Location.||the part of the URL that follows the # symbol, including the # symbol. You can listen for the hashchange event to get notified of changes to the hash in supporting browsers. E.g.:#test
host|Location.||the host name and port number. E.g.:[www.example.com]:80
hostname|Location.||the host name (without the port number or square brackets). E.g.:www.example.com
href|Location.||the entire URL. E.g.:http://[www.example.com]:80/search?q=devmo#test
pathname|Location.||the path (relative to the host). E.g.:/search
port|Location.||the port number of the URL. E.g.:80
protocol|Location.||the protocol of the URL. E.g.:http:
search|Location.||the part of the URL that follows the ? symbol, including the ? symbol. E.g.:?q=devmo
assign|Location.|(url: string): void|Load the document at the provided URL.
reload|Location.|(forceget: boolean): void|Reload the document from the current URL. forceget is a boolean, which, when it is true, causes the page to always be reloaded from the server. If it is false or not specified, the browser may reload the page from its cache.
replace|Location.|(url: string): void|Replace the current document with the one at the provided URL. The difference from the assign() method is that after using replace() the current page will not be saved in session history, meaning the user won't be able to use the Back button to navigate to it.
## CanvasRenderingContext2D
### Methods
arc|CanvasRenderingContext2D.|(x: number, y: number, radius: number, startAngle: number, endAngle: number[, anticlockwise: boolean]): void|
arcTo|CanvasRenderingContext2D.|(x1: number, y1: number, x2: number, y2: number, radius: number): void|
beginPath|CanvasRenderingContext2D.|(): void|
bezierCurveTo|CanvasRenderingContext2D.|(cp1x: number, cp1y: number, cp2x: number, cp2y: number, x: number, y: number): void|
clearRect|CanvasRenderingContext2D.|(x: number, y: number, width: number, height: number): void|
clip|CanvasRenderingContext2D.|(): void|
closePath|CanvasRenderingContext2D.|(): void|
createImageData|CanvasRenderingContext2D.|(width: number, height: number): ImageData|
createImageData|CanvasRenderingContext2D.|(imagedata: Imagedata): ImageData|
createLinearGradient|CanvasRenderingContext2D.|(x0: number, y0: number, x1: number, y1: number): nsIDOMCanvasGradient|
createPattern|CanvasRenderingContext2D.|(image: nsIDOMHTMLElement, repetition: DOMString): nsIDOMCanvasPattern|
createRadialGradient|CanvasRenderingContext2D.|(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number): nsIDOMCanvasGradient|
drawImage|CanvasRenderingContext2D.|(image: nsIDOMElement, a1: number, a2: number, [a3: number, a4: number, a5: number, a6: number,a7: number,a8: number]): void|
drawCustomFocusRing|CanvasRenderingContext2D.|(element: Element): boolean|
drawSystemFocusRing|CanvasRenderingContext2D.|(element: Element): void|
fill|CanvasRenderingContext2D.|(): void|
fillRect|CanvasRenderingContext2D.|(x: number, y: number, width: number, height: number): void|
fillText|CanvasRenderingContext2D.|(text: DOMString, x: number, y: number[, maxWidth: number]): void|
getImageData|CanvasRenderingContext2D.|(x: number, y: number, width: number, height: number): ImageData|
isPointInPath|CanvasRenderingContext2D.|(x: number, y: number): boolean|
lineTo|CanvasRenderingContext2D.|(x: number, y: number): void|
measureText|CanvasRenderingContext2D.|(text: DOMString): nsIDOMTextMetrics|
moveTo|CanvasRenderingContext2D.|(x: number, y: number): void|
putImageData|CanvasRenderingContext2D.|(imagedata: ImageData, dx: number, dy: double[, dirtyX: number, dirtyY: number, dirtyWidth: number, dirtyHeight: number]): void|
quadraticCurveTo|CanvasRenderingContext2D.|(cpx: number, cpy: number, x: number, y: number): void|
rect|CanvasRenderingContext2D.|(x: number, y: number, width: number, height: number): void|
restore|CanvasRenderingContext2D.|(): void|
rotate|CanvasRenderingContext2D.|(angle: number): void|
save|CanvasRenderingContext2D.|(): void|
scale|CanvasRenderingContext2D.|(x: number, y: number): void|
scrollPathIntoView|CanvasRenderingContext2D.|(): void|
setTransform|CanvasRenderingContext2D.|(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void|
stroke|CanvasRenderingContext2D.|(): void|
strokeRect|CanvasRenderingContext2D.|(x: number, y: number, w: number, h: number): void|
strokeText|CanvasRenderingContext2D.|(text: DOMString, x: number, y: number, maxWidth: number): void|
transform|CanvasRenderingContext2D.|(m11: number, m12: number, m21: number, m22: number, dx: number, dy: number): void|
translate|CanvasRenderingContext2D.|(x: number, y: number): void|
asyncDrawXULElement|(Gecko) CanvasRenderingContext2D.|(elem: nsIDOMXULElement, x: number, y: number, w: number, h: number, bgColor: DOMString[, flags: number): void| Requires Gecko 2.0
drawWindow|(Gecko) CanvasRenderingContext2D.|(window: nsIDOMWindow, x: number, y: number, w: number, h: number, bgColor: DOMString[, flags: number]): void|
getFillStyle_multi|(Gecko) CanvasRenderingContext2D.|(out str: DOMString, out iface: nsISupports, out type: number): void| Native code only! Requires Gecko 2.0
getImageData_explicit|(Gecko) CanvasRenderingContext2D.|(x: number, y: number, width: number, height: number, [array, size_is(dataLen)] dataPtr: octet, dataLen: number): void| Native code only! Requires Gecko 2.0
getStrokeStyle_multi|(Gecko) CanvasRenderingContext2D.|(out str: DOMString, out iface: nsISupports, out type: number): void| Native code only! Requires Gecko 2.0
mozDrawText|(Gecko) CanvasRenderingContext2D.|(textToDraw: DOMString): void| Requires Gecko 1.9 (unimplemented since Gecko 7.0)
mozMeasureText|(Gecko) CanvasRenderingContext2D.|(textToMeasure: DOMString): number| Requires Gecko 1.9 (unimplemented since Gecko 7.0)
mozPathText|(Gecko) CanvasRenderingContext2D.|(textToPath: DOMString): void| Requires Gecko 1.9 (unimplemented since Gecko 7.0)
mozTextAnumberPath|(Gecko) CanvasRenderingContext2D.|(textToDraw: DOMString, stroke: boolean): void| Requires Gecko 1.9 (unimplemented since Gecko 7.0)
putImageData_explicit|(Gecko) CanvasRenderingContext2D.|(x: number, y: number, width: number, height: number, [array, size_is(dataLen)] dataPtr: octet, dataLen: number, hasDirtyRect: boolean, dirtyX: number, dirtyY: number, dirtyWidth: number, dirtyHeight: number): void| Native code only! Requires Gecko 2.0
setFillStyle_multi|(Gecko) CanvasRenderingContext2D.|(str: DOMString, iface: nsISupports): void| Native code only! Requires Gecko 2.0
setStrokeStyle_multi|(Gecko) CanvasRenderingContext2D.|(str: DOMString, iface: nsISupports): void| Native code only! Requires Gecko 2.0
clearShadow|(WebKit) CanvasRenderingContext2D.|(): void|
drawImageFromRect|(WebKit) CanvasRenderingContext2D.|(image: HTMLImageElement[, sx: number, sy: number, sw: number, sh: number, dx: number, dy: number, dw: number, dh: number, compositeOperation: DOMString]): void|
setAlpha|(WebKit) CanvasRenderingContext2D.|(): void|
setCompositeOperation|(WebKit) CanvasRenderingContext2D.|(compositeOperation: DOMString): void|
setLineWidth|(WebKit) CanvasRenderingContext2D.|(width: number): void|
setLineCap|(WebKit) CanvasRenderingContext2D.|(cap: DOMString): void|
setLineJoin|(WebKit) CanvasRenderingContext2D.|(join: DOMString): void|
setMiterLimit|(WebKit) CanvasRenderingContext2D.|(limit: number): void|
setStrokeColor|(WebKit) CanvasRenderingContext2D.|(color: DOMString[, alpha: number]): void|
setStrokeColor|(WebKit) CanvasRenderingContext2D.|(grayLevel: number[, alpha: number]): void|
setStrokeColor|(WebKit) CanvasRenderingContext2D.|(r: number, g: number, b: number, a: number): void|
setStrokeColor|(WebKit) CanvasRenderingContext2D.|(c: number, m: number, y: number, k: number, a: number): void|
setFillColor|(WebKit) CanvasRenderingContext2D.|(color: DOMString[, alpha: number]): void|
setFillColor|(WebKit) CanvasRenderingContext2D.|(grayLevel: number[, alpha: number]): void|
setFillColor|(WebKit) CanvasRenderingContext2D.|(r: number, g: number, b: number, a: number): void|
setFillColor|(WebKit) CanvasRenderingContext2D.|(c: number, m: number, y: number, k: number, a: number): void|
setShadow|(WebKit) CanvasRenderingContext2D.|(width: number, height: number, blur: number[, color: DOMString, alpha: number]): void|
setShadow|(WebKit) CanvasRenderingContext2D.|(width: number, height: number, blur: number, grayLevel: number[, alpha: number): void|
setShadow|(WebKit) CanvasRenderingContext2D.|(width: number, height: number, blur: number, r: number, g: number, b: number, a: number): void|
setShadow|(WebKit) CanvasRenderingContext2D.|(width: number, height: number, blur: number, c: number, m: number, y: number, k: number, a: number): void|
### Properties
canvas|CanvasRenderingContext2D.||Back-reference to the canvas element for which this context was created. Read only.
fillStyle|CanvasRenderingContext2D.||Color or style to use inside shapes. Default #000 (black).
font|CanvasRenderingContext2D.||Default value 10px sans-serif.
globalAlpha|CanvasRenderingContext2D.||Alpha value that is applied to shapes and images before they are composited onto the canvas. Default 1.0 (opaque).
globalCompositeOperation|CanvasRenderingContext2D.||With globalAplpha applied this sets how shapes and images are drawn onto the existing bitmap. Possible values:source-atop|source-in|source-out|source-over (default)|destination-atop|destination-in|destination-out|destination-over|lighter|xor|
lineCap|CanvasRenderingContext2D.||Type of endings on the end of lines. Possible values: butt (default), round, square
lineJoin|CanvasRenderingContext2D.||Defines the type of corners where two lines meet. Possible values: round, bevel, miter (default)
lineWidth|CanvasRenderingContext2D.||Width of lines. Default 1.0
miterLimit|CanvasRenderingContext2D.||Default 10.
shadowBlur|CanvasRenderingContext2D.||Specifies the blurring effect. Default 0
shadowColor|CanvasRenderingContext2D.||Color of the shadow. Default fully-transparent black.
shadowOffsetX|CanvasRenderingContext2D.||Horizontal distance the shadow will be offset. Default 0.
shadowOffsetY|CanvasRenderingContext2D.||Vertical distance the shadow will be offset. Default 0.
strokeStyle|CanvasRenderingContext2D.||Color or style to use for the lines around shapes. Default #000 (black).
textAlign|CanvasRenderingContext2D.||Possible values: start (default), end, left, right or center.
textBaseLine|CanvasRenderingContext2D.||Possible values: top, hanging, middle, alphabetic (default), ideographic, bottom
mozCurrentTransform|(Gecko) CanvasRenderingContext2D.||Sets or gets the current transformation matrix. Requires Gecko 7.0
mozCurrentTransformInverse|(Gecko) CanvasRenderingContext2D.||Set or gets the current inversed transformation matrix. Requires Gecko 7.0
mozDash|(Gecko) CanvasRenderingContext2D.||of float    An array which specifies the lengths of alternating dashes and gaps. Requires Gecko 7.0
mozDashOffset|(Gecko) CanvasRenderingContext2D.||Specifies where to start a dasharray on a line. Requires Gecko 7.0
mozFillRule|(Gecko) CanvasRenderingContext2D.||The fill rule to use. This must be one of evenodd or nonzero (default).
mozImageSmoothingEnabled|(Gecko) CanvasRenderingContext2D.||Image smoothing mode; if disabled, images will not be smoothed if scaled. Requires Gecko 1.9.2
mozTextStyle|(Gecko) CanvasRenderingContext2D.||Requires Gecko 1.9 Deprecated Deprecated in favor of the HTML5 font attribute described above.
webkitLineDash|(WebKit) CanvasRenderingContext2D.||of float    An array which specifies the lengths of alternating dashes and gaps.
webkitLineDashOffset|(WebKit) CanvasRenderingContext2D.||Specifies where to start a dasharray on a line.