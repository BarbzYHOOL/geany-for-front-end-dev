typeOf = function(item)
instanceOf = function(item, object)
Function.prototype.extend = function(key, value)
Function.prototype.implement = function(key, value)
Function.from = function(item)
Array.from = function(item)
Number.from = function(item)
String.from = function(item)
Function.prototype.hide: function()
Function.prototype.protect: function()
Type = function(name, object)
Type.isEnumerable = function(item)
Type.prototype.implement = function(name, method)
Type.prototype.extend = function(name, method)
Type.prototype.alias: function(name, existing)
Type.prototype.mirror: function(hook)
Array.prototype.forEach: function(fn, bind)
Array.prototype.each: function(fn, bind)
Array.prototype.merge: function(source, k, v)
Array.prototype.clone: function(object)
Array.prototype.append: function(original)
Array.prototype.every: function(fn, bind)
Array.prototype.filter: function(fn, bind)
Array.prototype.indexOf: function(item, from)
Array.prototype.map: function(fn, bind)
Array.prototype.some: function(fn, bind)
Array.prototype.clean: function()
Array.prototype.invoke: function(methodName)
Array.prototype.associate: function(keys)
Array.prototype.link: function(object)
Array.prototype.contains: function(item, from)
Array.prototype.append: function(array)
Array.prototype.getLast: function()
Array.prototype.getRandom: function()
Array.prototype.include: function(item)
Array.prototype.combine: function(array)
Array.prototype.erase: function(item)
Array.prototype.empty: function()
Array.prototype.flatten: function()
Array.prototype.pick: function()
Array.prototype.hexToRgb: function(array)
Array.prototype.rgbToHex: function(array)
String.prototype.test: function(regex, params)
String.prototype.contains: function(string, separator)
String.prototype.trim: function()
String.prototype.clean: function()
String.prototype.camelCase: function()
String.prototype.hyphenate: function()
String.prototype.capitalize: function()
String.prototype.escapeRegExp: function()
String.prototype.toInt: function(base)
String.prototype.toFloat: function()
String.prototype.hexToRgb: function(array)
String.prototype.rgbToHex: function(array)
String.prototype.substitute: function(object, regexp)
Number.prototype.limit: function(min, max)
Number.prototype.round: function(precision)
Number.prototype.times: function(fn, bind)
Number.prototype.toFloat: function()
Number.prototype.toInt: function(base)
Number.prototype.attempt: function()
Function.prototype.attempt: function(args, bind)
Function.prototype.bind: function(that)
Function.prototype.bound = function()
Function.prototype.pass: function(args, bind)
Function.prototype.delay: function(delay, bind, args)
Function.prototype.periodical: function(periodical, bind, args)
Function.prototype.subset: function(object, keys)
Function.prototype.map: function(object, fn, bind)
Function.prototype.filter: function(object, fn, bind)
Function.prototype.every: function(object, fn, bind)
Function.prototype.some: function(object, fn, bind)
Function.prototype.keys: function(object)
Function.prototype.values: function(object)
Function.prototype.getLength: function(object)
Function.prototype.keyOf: function(object, value)
Function.prototype.contains: function(object, value)
Function.prototype.toQueryString: function(object, base)
DOMEvent.prototype.stop: function()
DOMEvent.prototype.stopPropagation: function()
DOMEvent.prototype.preventDefault: function()
DOMEvent.defineKey = function(code, key)
Class.prototype.Extends: function(parent)
Class.prototype.Implements: function(items)
Chain.prototype.chain: function()
Chain.prototype.callChain: function()
Chain.prototype.clearChain: function()
Events.prototype.addEvent: function(type, fn, internal)
Events.prototype.addEvents: function(events)
Events.prototype.fireEvent: function(type, args, delay)
Events.prototype.removeEvent: function(type, fn)
Events.prototype.removeEvents: function(events)
Options.prototype.setOptions: function()
Slick.parse = function(expression)
Slick.search = function(context, expression, append)
Slick.find = function(context, expression)
Slick.contains = function(container, node)
Slick.getAttribute = function(node, name)
Slick.hasAttribute = function(node, name)
Slick.match = function(node, selector)
Slick.defineAttributeGetter = function(name, fn)
Slick.lookupAttributeGetter = function(name)
Slick.definePseudo = function(name, fn)
Slick.lookupPseudo = function(name)
Slick.override = function(regexp, fn)
Slick.uidOf = function(node)
Element = function(tag, props)
Elements = function(nodes)
Elements.prototype.filter: function(filter, bind)
Elements.prototype.push: function()
Elements.prototype.unshift: function()
Elements.prototype.concat: function()
Elements.prototype.append: function(collection)
Elements.prototype.empty: function()
Document.prototype.newElement: function(tag, props)
Document.prototype.newTextNode: function(text)
Document.prototype.getDocument: function()
Document.prototype.getWindow: function()
Document.prototype.id: function()
Window.prototype.getDocument: function()
Window.prototype.getWindow: function()
[Document, Element].prototype.getElements: function(expression)
[Document, Element].prototype.getElement: function(expression)
[Document, Element].prototype.contains: function(element)
Element.prototype.getFirst: function(expression)
Element.prototype.getLast: function(expression)
Element.prototype.getWindow: function()
Element.prototype.getDocument: function()
Element.prototype.getElementById: function(id)
Element.prototype.match: function(expression)
Window.prototype.$$: function(selector)
Element.prototype.setProperty: function(name, value)
Element.prototype.setProperties: function(attributes)
Element.prototype.getProperty: function(name)
Element.prototype.getProperties: function()
Element.prototype.removeProperty: function(name)
Element.prototype.removeProperties: function()
Element.prototype.set: function(prop, value)
Element.prototype.get: function(prop)
Element.prototype.erase: function(prop)
Element.prototype.hasClass: function(className)
Element.prototype.addClass: function(className)
Element.prototype.removeClass: function(className)
Element.prototype.toggleClass: function(className, force)
Element.prototype.adopt: function()
Element.prototype.appendText: function(text, where)
Element.prototype.grab: function(el, where)
Element.prototype.inject: function(el, where)
Element.prototype.replaces: function(el)
Element.prototype.wraps: function(el, where)
Element.prototype.getSelected: function()
Element.prototype.toQueryString: function()
Element.prototype.destroy: function()
Element.prototype.empty: function()
Element.prototype.dispose: function()
Element.prototype.clone: function(contents, keepid)
[Element, Window, Document].prototype.addListener: function(type, fn)
[Element, Window, Document].prototype.removeListener: function(type, fn)
[Element, Window, Document].prototype.retrieve: function(property, dflt)
[Element, Window, Document].prototype.store: function(property, value)
[Element, Window, Document].prototype.eliminate: function(property)
Element.prototype.getComputedStyle: function(property)
Element.prototype.setStyle: function(property, value)
Element.prototype.getStyle: function(property)
Element.prototype.setStyles: function(styles)
Element.prototype.getStyles: function()
[Element, Window, Document].addEvent: function(type, fn)
[Element, Window, Document].condition = function(event)
[Element, Window, Document].removeEvent: function(type, fn)
[Element, Window, Document].addEvents: function(events)
[Element, Window, Document].removeEvents: function(events)
[Element, Window, Document].fireEvent: function(type, args, delay)
[Element, Window, Document].cloneEvents: function(from, type)
Element.prototype.scrollTo: function(x, y)
Element.prototype.getSize: function()
Element.prototype.getScrollSize: function()
Element.prototype.getScroll: function()
Element.prototype.getScrolls: function()
Element.prototype.getOffsets: function()
Element.prototype.getPosition: function(relative)
Element.prototype.getCoordinates: function(element)
Element.prototype.computePosition: function(obj)
Element.prototype.setPosition: function(obj)
[Document, Window].prototype.getSize: function()
[Document, Window].prototype.getScroll: function()
[Document, Window].prototype.getScrollSize: function()
[Document, Window].prototype.getPosition: function()
[Document, Window].prototype.getCoordinates: function()
[Window, Document, Element].prototype.getHeight: function()
[Window, Document, Element].prototype.getWidth: function()
[Window, Document, Element].prototype.getScrollTop: function()
[Window, Document, Element].prototype.getScrollLeft: function()
[Window, Document, Element].prototype.getScrollHeight: function()
[Window, Document, Element].prototype.getScrollWidth: function()
[Window, Document, Element].prototype.getTop: function()
[Window, Document, Element].prototype.getLeft: function()
Fx.prototype.getTransition: function()
Fx.prototype.step: function(now)
Fx.prototype.set: function(now)
Fx.prototype.compute: function(from, to, delta)
Fx.prototype.check: function()
Fx.prototype.start: function(from, to)
Fx.prototype.stop: function()
Fx.prototype.cancel: function()
Fx.prototype.pause: function()
Fx.prototype.resume: function()
Fx.prototype.isRunning: function()
Fx.compute = function(from, to, delta)
Fx.Tween.prototype.set: function(property, now)
Fx.Tween.prototype.start: function(property, from, to)
Element.prototype.tween: function(property, from, to)
Element.prototype.fade: function(how)
Element.prototype.highlight: function(start, end)
Fx.Morph.prototype.set: function(now)
Fx.Morph.prototype.compute: function(from, to, delta)
Fx.Morph.prototype.start: function(properties)
Element.prototype.morph: function(props)
Fx.prototype.getTransition: function()
Fx.Transition.easeIn
Fx.Transition.easeOut
Fx.Transition.easeInOut
Fx.Transitions.linear
Fx.Transitions.Pow
Fx.Transitions.Expo
Fx.Transitions.Circ
Fx.Transitions.Sine
Fx.Transitions.Back
Fx.Transitions.Bounce
Fx.Transitions.Elastic
Fx.Transitions.Quad
Fx.Transitions.Cubic
Fx.Transitions.Quart
Fx.Transitions.Quint
Request.prototype.isRunning: function()
Request.prototype.setHeader: function(name, value)
Request.prototype.getHeader: function(name)
Request.prototype.send: function(options)
Request.prototype.get: function(options)
Request.prototype.post: function(options)
Request.prototype.put: function(options)
Request.prototype.delete: function(options)
Request.prototype.GET: function(options)
Request.prototype.POST: function(options)
Request.prototype.PUT: function(options)
Request.prototype.DELETE: function(options)
Request.prototype.cancel: function()
Element.prototype.send: function(url)
Element.prototype.load: function()
JSON.validate = function(string)
JSON.decode = function(string, secure)
Cookie.prototype.write: function(value)
Cookie.prototype.read: function()
Cookie.prototype.dispose: function()
Cookie.write = function(key, value, options)
Cookie.read = function(key)
Cookie.dispose = function(key, options)
Swiff.remote = function(obj, fn)
